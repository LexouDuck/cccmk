# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

###
### Project
###

%%if is(type,program):/%[name]%
%%if is(type,library):/%[name]%.*
%%if tracked(_if_ask_mkfile/mkfile/_if_ask_testsuite/rules/test.mk):/%[name]%-test

# Build
/obj/
/bin/
/dist/
/build/
%%if tracked(_if_ask_mkfile/mkfile/_if_ask_testsuite/rules/packages.mk):/lib/*/

# Testing
/coverage/

# Logs
/log/
/logs/
log.txt
*.log

# Documentation
#/doc/
#/docs/
%%if tracked(_if_ask_mkfile/mkfile/_if_ask_testsuite/rules/_if_multiselect/doc.mk):/doc/doxyrest/

# Reference material
/ref/



%%if is(lang,c)
###
### Language: C
###

# C intermediary build files
*.d
*.o
*.ko
*.obj
*.elf
*.ilk
*.map
*.exp
*.gch
*.pch
# Libraries (static)
*.a
*.la
*.lo
*.lib
# Libraries (dynamic)
*.def
*.dll
*.so
*.so.*
*.dylib
# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
*.stackdump
# Debug files
*.dSYM/
*.su
*.idb
*.pdb
# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf



%%end if
%%if is(lang,rs)
###
### Language: Rust
###
/Cargo.lock
/target
/bin



%%end if
%%if is(lang,py)
###
### Language: Python
###

# Compiled / optimized / binary files
__pycache__/
*.py[cod]
*$py.class
# Distribution / packaging
.Python
MANIFEST
downloads/
build/
dist/
var/
lib/
lib64/
parts/
sdist/
# build files
setup.cfg
# eggs
eggs/
.eggs/
*.egg
*.egg-info/
develop-eggs/
.installed.cfg
# wheels
wheels/
pip-wheel-metadata/
share/python-wheels/
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/
# PyInstaller: Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec
# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# mypy
.mypy_cache/
.dmypy.json
dmypy.json
# Pyre type checker
.pyre/
# virtualenv
pyvenv.cfg
bin/
share/
# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
# pyenv
.python-version
# Rope project settings
.ropeproject
# Spyder project settings
.spyderproject
.spyproject
# mkdocs documentation
/site
# Sphinx documentation
docs/_build/
# SageMath parsed files
*.sage.py
# Celery stuff
celerybeat-schedule
celerybeat.nid
# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
# Flask stuff:
instance/
.webassets-cache
# Scrapy stuff:
.scrapy
# PyBuilder
target/
# Jupyter Notebook
.ipynb_checkpoints
# IPython
profile_default/
ipython_config.py
# Translations
*.mo
*.pot

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock




%%end if
%%if matches(lang,[jt]sx?)
###
### Language: JavaScript
###

# node: Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release
# node: Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# npm
package-lock.json
# npm: Dependency directory
node_modules/
# npm: Optional npm cache directory
.npm
# npm: logs
npm-debug.log*
# npm: Output of 'npm pack'
*.tgz

# yarn: Dependency directory
jspm_packages/
# Yarn Integrity file
.yarn-integrity
# yarn logs
yarn-debug.log*
yarn-error.log*

# TypeScript: v1 declaration files
typings/
# TypeScript: cache
*.tsbuildinfo

# eslint: Optional eslint cache
.eslintcache

# other tools

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
# parcel-bundler cache (https://parceljs.org/)
.cache
# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public
/.pnp
.pnp.js
# Optional REPL history
.node_repl_history
# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
# Coverage directory used by tools like istanbul
coverage
*.lcov
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt
# Bower dependency directory (https://bower.io/)
bower_components
# node-waf configuration
.lock-wscript
# Next.js build output
.next
# Nuxt.js build / generate output
.nuxt
dist
build
# vuepress build output
.vuepress/dist
# Serverless directories
.serverless/
# FuseBox cache
.fusebox/
# DynamoDB Local files
.dynamodb/
# TernJS port file
.tern-port
# Runtime data
pids
*.pid
*.seed
*.pid.lock



%%end if
###
### OS-specific files
###

# Linux

# MacOS
.DS-Store
.DS_Store

# Windows
Thumbs.db
desktop.ini

# FAT32
.Trash-[0-9]*
.trashes
.spotlight-v[0-9]*



###
### IDE-specific files
###

*.code-workspace
# Sublime text
*.sublime-workspace
# Visual Studio
.vs/
# Visual Studio Code
.vscode/



###
### General files
###

# local environment variables files
.env
.env.dev
.env.test
.env.prod
.env.local
.env.dev.local
.env.test.local
.env.prod.local



# cccmk
.cccmk_diff_*/
.cccmk_update/
